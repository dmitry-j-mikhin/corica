#!/bin/bash

extract_backtrace() {
    gdb -q -ex 'bt full' --batch -c "$1"
}

extract_libs() {
    gdb -q -ex 'i sh' --batch -c "$1" | sed -ne 's/^0x.*[[:space:]]\(\/.*\)/\1/p'
}

extract_command_line() {
    gdb -q --batch -c "$1" | sed -ne "s/Core was generated by \`\(.*\)'\.$/\1/p"
}

extract_bin() {
    which $(extract_command_line "$1" | awk '{print $1}')
}

action_libs() {
    read -r -d '' usage <<EOF
usage: $0 libs [options] <coredump>
print loaded libraries from coredump

options:
  -h    help
EOF

    while getopts :h opt; do
        case $opt in
            h) echo "$usage"; exit 0;;
            ?) echo error: unknown option \'-$OPTARG\'; exit 1;;
        esac
    done
    if [ "$#" != "1" ]; then
        echo "$usage"; exit 1
    fi

    extract_libs $1
}

action_pack() {
    read -r -d '' usage <<EOF
usage: $0 pack [options] <coredump> <destination>
pack coredump, libraries and binary into tarball

destination file should has suffix like '.tar.gz' or '.tar.bz2'

options:
  -h    help
EOF

    while getopts :h opt; do
        case $opt in
            h) echo "$usage"; exit 0;;
            ?) echo error: unknown option \'-$OPTARG\'; exit 1;;
        esac
    done
    if [ "$#" != "2" ]; then
        echo "$usage"; exit 1
    fi

    local core="$(realpath $1)" dest="$(realpath $2)"

    local dir=$(mktemp -dq /tmp/corica.$(date +%H%M%S).XXXXXX)
    local libs_=$(extract_libs "$core")
    local libs_real=$(for f in $libs_; do realpath $f; done)
    local bin=$(extract_bin "$core")

    cat <<EOF >$dir/description.yaml
libs_real: $(for f in $libs_real; do echo -ne "\\n  - $f"; done)
backtrace: |
$(extract_backtrace "$core" | sed -e 's/^/  /')
EOF
    eval tar -cah -C$dir -f "$dest" "$core" $libs_ "$bin" description.yaml
    rm -rf "$dir"
}

action_backtrace() {
    read -r -d '' usage <<EOF
usage: $0 backtrace [options] <coredump>
print coredump backtrace

alias: bt

options:
  -h    help
EOF

    while getopts :h opt; do
        case $opt in
            h) echo "$usage"; exit 0;;
            ?) echo error: unknown option \'-$OPTARG\'; exit 1;;
        esac
    done
    if [ "$#" != "1" ]; then
        echo "$usage"; exit 1
    fi

    extract_backtrace "$1"
}

read -r -d '' usage <<EOF
usage: $0 [options] <action>
tool for coredump manipulations

actions:
  backtrace     print coredump backtrace
  libs          print loaded libraries from coredump
  pack          pack coredump, libraries and binary into a tarball

options:
  -h    help
EOF

while getopts ':h' opt; do
    case $opt in
        h) echo "$usage"; exit 0;;
        ?) echo error: unknown option \'-$OPTARG\'; exit 1;;
    esac
done

action=$1; shift
case $action in
    backtrace | bt) action_backtrace $@;;
    pack) action_pack $@;;
    libs) action_libs $@;;
    *) echo error: unknown action;;
esac
